/*
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20
*/
class Solution {
    public int[][] generateMatrix(int n) {
        int trav = 0, count = 0, left = 0, right =n-1,top=0,bottom =n-1;        
        int result[][] = new int[n][n];

        while(count<n*n) {
            if(trav == 0) {
                for(int i= left; i<=right; i++) {
                    count++;
                    result[top][i] = count;
                }
                top++;
                
            } else if(trav == 1) {
                for(int i= top; i<=bottom; i++) {
                    count++;
                    result[i][right] = count;
                }
                right--;
            } else if(trav == 2) {
                for(int i= right; i>=left; i--) {
                    count++;
                    result[bottom][i] = count;
                }
                bottom--;
            } else if(trav == 3) {
                for(int i= bottom; i>=top; i--) {
                    count++;
                    result[i][left] = count;
                }
                left++;
            }
            trav = (trav + 1 ) % 4;
        }
        return result;
    }
}

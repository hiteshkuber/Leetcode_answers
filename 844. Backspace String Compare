/**

Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

 

Example 1:

Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".
Example 2:

Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".
Example 3:

Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".
 

Constraints:

1 <= s.length, t.length <= 200
s and t only contain lowercase letters and '#' characters.
 

Follow up: Can you solve it in O(n) time and O(1) space?

**/

class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> ss = new Stack();
        Stack<Character> tt = new Stack();

        for(int i=0; i<s.length(); i++) {
            if(s.charAt(i) == '#') {
                if(!ss.isEmpty())
                    ss.pop();
            } else {
                ss.push(s.charAt(i));
            }
        }

        for(int i=0; i<t.length(); i++) {
            if(t.charAt(i) == '#') {
                if(!tt.isEmpty())
                    tt.pop();
            } else {
                tt.push(t.charAt(i));
            }
        }

        boolean result = true;

        while(!ss.isEmpty() && !tt.isEmpty()) {
            char a=ss.pop(), b=tt.pop();

            if(a != b) {
                result = false;
                break;
            }
        }

        if(!ss.isEmpty() || !tt.isEmpty()) {
            return false;
        }

        return result;
    }
}

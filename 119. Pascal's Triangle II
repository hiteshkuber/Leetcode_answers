/*
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]
 

Constraints:

0 <= rowIndex <= 33

*/

class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList();

        result.add(1);

        if(rowIndex == 0) {
            return result;
        }
        
        for(int i =1; i<=(rowIndex+1);i++) {

            List<Integer> nextRow = new ArrayList();
            nextRow.add(1);

            for(int j=1;j<i-1; j++) {
                nextRow.add(result.get(j-1)+result.get(j));
            }

            nextRow.add(1);
            result = nextRow;
        }

        return result;
    }
}

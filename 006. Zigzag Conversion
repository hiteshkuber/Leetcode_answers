/*
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000
*/
class Solution {
    public String convert(String s, int numRows) {
        if(numRows == 1)
            return s;
        List<List<Character>> result = new ArrayList();
        int n = s.length();
        int index=0;
        boolean isFirst = true;
        while(index < n) {
            for(int i=0;i<numRows && index < n; i++) {
               if(isFirst) {
                   result.add(new ArrayList<Character>());
               }
               result.get(i).add(s.charAt(index));
               index++;
            }
            isFirst = false;
            reverse(result, s,  index,  numRows, n);
            index+=numRows-2;
        }
        String resultStr = "";
        for(int i=0;i<result.size();i++) {
            for(int j=0;j<result.get(i).size();j++)
                resultStr += result.get(i).get(j);
        }
        return resultStr;
    }
    
    public void reverse(List<List<Character>> result, String s, int index, int numRows, int n) {
        for(int i=numRows-2;i>0 && index < n;i--) {
            result.get(i).add(s.charAt(index));
            index++;
        }
    }
}
